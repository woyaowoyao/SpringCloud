version: '3'
services:
  redis: 
    image: redis:alpine
    container_name: sc-redis
    restart: always
    volumes:
      - ./data/redis:/data
    environment:
      - REDIS_PASSWORD=123456
    #command: redis-cli config set requirepass 123456
    networks:
      - sc-net
    ports:
      - 6379:6379

  rabbitmq:
    image: rabbitmq:alpine
    container_name: sc-rabbitmq
    restart: always
    volumes:
      - ./data/rabbitmq:/var/lib/rabbitmq
    networks:
      - sc-net
    ports:
      - 5672:5672

  postgres:
    image: postgres:9.6-alpine
    container_name: sc-postgres
    restart: always
    volumes:
      - ./data/postgres:/var/lib/postgresql
    networks:
      - sc-net
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=postgres

  zipkin-server:
    image: openzipkin/zipkin
    container_name: sc-zipkin-server
    restart: always
    volumes:
      - ./data/zipkin-server/logs:/var/logs
    networks:
      - sc-net
    ports:
      - 9411:9411
    environment:
      - RABBIT_ADDRESSES=rabbitmq:5672
      - RABBIT_MQ_PORT=5672
      - RABBIT_PASSWORD=guest
      - RABBIT_USER=guest
      - STORAGE_TYPE=elasticsearch
      - ES_HOSTS=http://elasticsearch:9200
    depends_on:
      - rabbitmq

  elasticsearch:
    image: elasticsearch:5.6.13
    container_name: sc-elasticsearch
    restart: always
    environment:
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - node.name=elasticsearch_node_1
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./data/elasticsearch/data:/usr/share/elasticsearch/data
      - ./data/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./data/elasticsearch/logs:/usr/share/elasticsearch/logs
    networks:
      - sc-net
    ports:
      - 9200:9200
      - 9300:9300

  skywalking:
    image: wutang/skywalking-docker:5.x
    container_name: skywalking
    privileged: true
    networks:
      - sc-net
    environment:
      - ES_CLUSTER_NAME=elasticsearch
      - ES_ADDRESSES=elasticsearch:9300
      - BIND_HOST=127.0.0.1
      - AGENT_JETTY_BIND_HOST=127.0.0.1
      - NAMING_BIND_HOST=127.0.0.1
      - UI_JETTY_BIND_HOST=0.0.0.0
    depends_on:
      - elasticsearch
    command: ["/wait-for-it.sh", "elasticsearch:9300", "-t", "20"]
    ports:
      - 8080:8080
      - 10800:10800
      - 11800:11800
      - 12800:12800

  kibana:
    image: kibana:5.6
    container_name: sc-kibana
    restart: always
    volumes:
      - ./data/kibana/logs:/var/logs/kibana
    networks:
      - sc-net
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  grafana:
    image: grafana/grafana:latest
    container_name: sc-grafana
    restart: always
    volumes:
      - ./data/grafana/logs:/var/logs/grafana
    networks:
      - sc-net
    ports:
      - 3000:3000
  apollo-portal:
    image: idoop/docker-apollo:latest
    container_name: sc-apollo-portal-server
    restart: always
    # portal若出现504错误,则将网络模式改为host. host模式下如果想改端口,参考下方修改端口的环境变量
    # Mac和windows暂不支持host模式，请在linux下使用，应用和apollo需要能直接访问
    # network_mode: "host"
    # 如果需要查看日志,挂载容器中的/opt路径出来即可.
    networks:
      - sc-net
    ports:
      - 8070:8070
    volumes:
      - ./data/config-server/logs:/opt
    environment:
      # 开启Portal,默认端口: 8070
      PORTAL_DB: jdbc:mysql://apollo-db:3306/ApolloPortalDB?characterEncoding=utf8
      PORTAL_DB_USER: root
      PORTAL_DB_PWD: root123
      # 指定远程DEV地址
      DEV_URL: http://apollo-config:8080
    depends_on:
      - apollo-db

  apollo-config:
    image: idoop/docker-apollo:latest
    container_name: sc-apollo-config-server
    restart: always
    # portal若出现504错误,则将网络模式改为host. host模式下如果想改端口,参考下方修改端口的环境变量
    # Mac和windows暂不支持host模式，请在linux下使用，应用和apollo需要能直接访问
    # network_mode: "host"
    # 如果需要查看日志,挂载容器中的/opt路径出来即可.
    networks:
      - sc-net
    ports:
      - 8080:8080
    volumes:
      - ./data/config-server/logs:/opt
    environment:
      # 开启dev环境, 默认端口: config 8080, admin 8090 , 只用开config服务
      DEV_DB: jdbc:mysql://apollo-db:3306/ApolloConfigDB?characterEncoding=utf8
      DEV_DB_USER: root
      DEV_DB_PWD: root123
    depends_on:
      - apollo-db

  apollo-db:
    image: mysql:5.7
    container_name: sc-apollo-db
    restart: always
    networks:
      - sc-net
    ports:
      - 3306
    volumes:
      - ./data/config-server/sql:/docker-entrypoint-initdb.d
      - ./data/mysql:/var/lib/mysql
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: root123

  eureka-server:
    image: cike/eureka-server
    container_name: sc-eureka-server
    restart: always
    volumes:
      - ./data/eureka-server/logs:/var/logs
      - ./data/pinpoint-agent:/pinpoint-agent
    networks:
      - sc-net
    ports:
      - 8761:8761
    environment:
      - RABBIT_MQ_HOST=rabbitmq
      - RABBIT_MQ_PORT=5672
      - RABBIT_MQ_USERNAME=guest
      - RABBIT_MQ_PASSWORD=guest
      - JAVA_OPTS=-javaagent:${PINPOINT_AGENT_JAR} -Dpinpoint.agentId=eureka-server1 -Dpinpoint.applicationName=eureka-server
    depends_on:
      - rabbitmq

  config-server:
    image: cike/config-server
    container_name: sc-config-server
    restart: always
    volumes:
      - ./data/config-server/logs:/var/logs
      - ./data/pinpoint-agent:/pinpoint-agent
    networks:
      - sc-net
    ports:
      - 8888:8888
    environment:
      - RABBIT_MQ_HOST=rabbitmq
      - RABBIT_MQ_PORT=5672
      - EUREKA_ZONE_HOST=eureka-server
      - EUREKA_ZONE_PORT=8761
      - JAVA_OPTS=-javaagent:${PINPOINT_AGENT_JAR} -Dpinpoint.agentId=config-server1 -Dpinpoint.applicationName=config-server
    depends_on:
      - eureka-server

  gateway:
    image: cike/gateway-web
    container_name: sc-gateway-web
    restart: always
    volumes:
      - ./data/gateway-web/logs:/var/logs
      - ./data/pinpoint-agent:/pinpoint-agent
    networks:
      - sc-net
    ports:
      - 8443:8443
    environment:
      - RABBIT_MQ_HOST=rabbitmq
      - RABBIT_MQ_PORT=5672
      - RABBIT_MQ_USERNAME=guest
      - RABBIT_MQ_PASSWORD=guest
      - EUREKA_ZONE_HOST=eureka-server
      - EUREKA_ZONE_PORT=8761
      - JAVA_OPTS=-javaagent:${PINPOINT_AGENT_JAR} -Dpinpoint.agentId=gateway-web1 -Dpinpoint.applicationName=gateway-web
    depends_on:
      - eureka-server
      - authorization-server
      - authentication-server

  authorization-server:
    image: cike/authorization-server
    container_name: sc-authorization-server
    restart: always
    volumes:
      - ./data/authorization-server/logs:/var/logs
      - ./data/pinpoint-agent:/pinpoint-agent
    networks:
      - sc-net
    ports:
      - 8000:8000
    environment:
      - RABBIT_MQ_HOST=rabbitmq
      - RABBIT_MQ_PORT=5672
      - RABBIT_MQ_USERNAME=guest
      - RABBIT_MQ_PASSWORD=guest
      - EUREKA_ZONE_HOST=eureka-server
      - EUREKA_ZONE_PORT=8761
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=123456
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=postgres
      - JAVA_OPTS=-javaagent:${PINPOINT_AGENT_JAR} -Dpinpoint.agentId=authorization-server1 -Dpinpoint.applicationName=authorization-server
    depends_on:
      - eureka-server
      - postgres

  authentication-server:
    image: cike/authentication-server
    container_name: sc-authentication-server
    restart: always
    volumes:
      - ./data/authentication-server/logs:/var/logs
      - ./data/pinpoint-agent:/pinpoint-agent
    networks:
      - sc-net
    ports:
      - 8001:8001
    environment:
      - RABBIT_MQ_HOST=rabbitmq
      - RABBIT_MQ_PORT=5672
      - RABBIT_MQ_USERNAME=guest
      - RABBIT_MQ_PASSWORD=guest
      - EUREKA_ZONE_HOST=eureka-server
      - EUREKA_ZONE_PORT=8761
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=123456
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=postgres
      - JAVA_OPTS=-javaagent:${PINPOINT_AGENT_JAR} -Dpinpoint.agentId=authentication-server1 -Dpinpoint.applicationName=authentication-server
    depends_on:
      - eureka-server
      - postgres
networks:
  sc-net:
    external: false